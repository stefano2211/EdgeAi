services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile.api
    container_name: api
    ports:
      - "5000:5000"
    volumes:
      - db_data:/app
    networks:
      - mes-network

  mcp:
    build:
      context: ./mcp
      dockerfile: Dockerfile.mcp
    container_name: mcp
    ports:
      - "8000:8000"
    depends_on:
      api:
        condition: service_started
      qdrant:
        condition: service_started
      ollama:
        condition: service_started
    command: >
      sh -c "pip install mcpo && mcpo --port 8000 -- python src/main.py"
    restart: unless-stopped
    networks:
      - mes-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - mes-network

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama
    networks:
      - mes-network
    restart: unless-stopped

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "3001:8080"
    environment:
      - OLLAMA_API_BASE_URL=http://ollama:11434
    volumes:
      - openwebui_data:/app/backend/data
    depends_on:
      mcp:
        condition: service_started
      ollama:
        condition: service_started
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mes-network

networks:
  mes-network:
    driver: bridge

volumes:
  db_data:
  qdrant_data:
  openwebui_data:
  ollama_data: